{"version":3,"file":"RichTextEditor-708f2dca.js","sources":["../../src/editingTools/RichTextEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\";\nimport TextEditor, { createValueFromString } from 'react-rte';\nimport { makeStylesWithTheme } from 'common/EditablesContext'\n\nconst useStyles = makeStylesWithTheme(theme => ({\n  input: {\n    fontSize: \"inherit\",\n    fontFamily: \"inherit\",\n    fontWeight: \"inherit\",\n    color: theme.colors.dark,\n    backgroundColor: theme.colors.inputBackground,\n  }\n}))\n\nconst RichTextEditor = ({ content, onContentChange, placeholder, ...rest }) => {\n  const [editorValue, setEditorValue] = useState(null)\n  const { text='' } = content\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (!editorValue) {\n      const editorValue = createValueFromString(text, 'html');\n      setEditorValue(editorValue);\n    }\n  }, [text, editorValue])\n\n\n  const onChange = newEditorValue => {\n    setEditorValue(newEditorValue)\n    const text = newEditorValue.toString('html')\n    onContentChange({ ...content, text })\n  }\n\n  console.log({ text })\n\n  if (editorValue) {\n    return (\n      <div className={classes.input}>\n        <TextEditor\n          {...rest}\n          value={editorValue}\n          onChange={onChange}\n          placeholder={placeholder}\n        />\n      </div>\n    )\n  }\n\n  return (<div />)\n};\n\nRichTextEditor.propTypes = {\n  content: PropTypes.object.isRequired,\n  onContentChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string\n}\n\nRichTextEditor.defaultProps = {\n  content: { text: \"\" },\n  onContentChange: updated => console.log('Implement a function to save content changes.', updated),\n  placeholder: \"\"\n}\n\nexport default RichTextEditor;"],"names":["useStyles","makeStylesWithTheme","theme","input","fontSize","fontFamily","fontWeight","color","colors","dark","backgroundColor","inputBackground","RichTextEditor","content","onContentChange","placeholder","rest","useState","editorValue","setEditorValue","text","classes","useEffect","createValueFromString","console","log","React","className","TextEditor","value","onChange","newEditorValue","toString","defaultProps","updated"],"mappings":"+MAKMA,EAAYC,uBAAoB,SAAAC,SAAU,CAC9CC,MAAO,CACLC,SAAU,UACVC,WAAY,UACZC,WAAY,UACZC,MAAOL,EAAMM,OAAOC,KACpBC,gBAAiBR,EAAMM,OAAOG,qBAI5BC,EAAiB,gBAAGC,IAAAA,QAASC,IAAAA,gBAAiBC,IAAAA,YAAgBC,8EAC5BC,WAAS,8BAAxCC,OAAaC,SACAN,EAAZO,KAAAA,aAAK,KACPC,EAAUrB,IAEhBsB,aAAU,eACHJ,EAAa,KACVA,EAAcK,wBAAsBH,EAAM,QAChDD,EAAeD,MAEhB,CAACE,EAAMF,WASVM,QAAQC,IAAI,CAAEL,KAAAA,IAEVF,EAEAQ,+BAAKC,UAAWN,EAAQlB,OACtBuB,wBAACE,2BACKZ,GACJa,MAAOX,EACPY,SAdS,SAAAC,GACfZ,EAAeY,OACTX,EAAOW,EAAeC,SAAS,QACrClB,uCAAqBD,OAASO,KAAAA,MAYxBL,YAAaA,MAMbW,qCASVd,EAAeqB,aAAe,CAC5BpB,QAAS,CAAEO,KAAM,IACjBN,gBAAiB,SAAAoB,UAAWV,QAAQC,IAAI,gDAAiDS,IACzFnB,YAAa"}